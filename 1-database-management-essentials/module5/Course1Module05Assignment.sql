# ==========# SELECT Statement Problems# ==========# ----------# 1# ----------# For event requests, list the event number, event date (eventrequest.dateheld), and count of the event plans.  Only# include event requests in the result if the event request has more than one related event plan with a work date in# December 2018.SELECT ER.EventNo, DateHeld, COUNT(PlanNo) AS NumPlansFROM EventRequest ER         INNER JOIN EventPlan EP on ER.EventNo = EP.EventNoWHERE DateHeld BETWEEN '2018-12-01' AND '2018-12-31'GROUP BY ER.EventNo, DateHeldHAVING NumPlans > 1;# ----------# 2# ----------# List the plan number, event number, work date, and activity of event plans meeting the following two conditions: (1)# the work date is in December 2018 and (2) the event is held in the “Basketball arena”.  Your query must not use the# facility number (“F101”) of the basketball arena in the WHERE clause. Instead, you should use a condition on the# FacName column for the value of “Basketball arena”.SELECT PlanNo, EP.EventNo, WorkDate, ActivityFROM EventPlan EP         INNER JOIN EventRequest ER on EP.EventNo = ER.EventNo         INNER JOIN Facility F on ER.FacNo = F.FacNoWHERE (WorkDate BETWEEN '2018-12-01' AND '2018-12-31')  AND (F.FacName = 'Basketball arena');# ----------# 3# ----------# List the event number, event date, status, and estimated cost of events where there is an event plan managed by Mary# Manager and the event is held in the basketball arena in the period October 1 to December 31, 2018.  Your query must# not use the facility number (“F101”) of the basketball arena or the employee number (“E101”) of “Mary Manager” in the# WHERE clause. Thus, the WHERE clause should not have conditions involving the facility number or employee number# compared to constant values.SELECT ER.EventNo, DateHeld, Status, EstCostFROM EventRequest ER         INNER JOIN EventPlan EP on ER.EventNo = EP.EventNo         INNER JOIN Employee E on EP.EmpNo = E.EmpNo         INNER JOIN Facility F on ER.FacNo = F.FacNoWHERE E.EmpName = 'Mary Manager'  AND (WorkDate BETWEEN '2018-10-01' AND '2018-12-31')  AND F.FacName = 'Basketball arena';# ----------# 4# ----------# List the plan number, line number, resource name, number of resources (eventplanline.number), location name, time# start, and time end where the event is held at the basketball arena, the event plan has activity of activity of# “Operation”, and the event plan has a work date in the period October 1 to December 31, 2018.  Your query must not# use the facility number (“F101”) of the basketball arena in the WHERE clause. Instead, you should use a condition on# the FacName column for the value of “Basketball arena”.SELECT EPL.PlanNo, LineNo, ResName, EPL.NumberFld AS NumResources, LocName, TimeStart, TimeEndFROM EventPlanLine EPL         INNER JOIN ResourceTbl RT on EPL.ResNo = RT.ResNo         INNER JOIN Location L on EPL.LocNo = L.LocNo         INNER JOIN Facility F on L.FacNo = F.FacNo         INNER JOIN EventPlan EP on EPL.PlanNo = EP.PlanNoWHERE F.FacName = 'Basketball arena'  AND Activity = 'Operation'  AND (WorkDate BETWEEN '2018-10-01' AND '2018-12-31')# ==========# Database Modification Problems# ==========# ----------# 1# ----------# Insert a new row into the Facility table with facility name “Swimming Pool”.INSERT INTO Facility (FacNo, FacName)SELECT CONCAT('F', (CAST(SUBSTRING_INDEX(FacNo, 'F', -1) AS UNSIGNED) + 1)), 'Swimming Pool'FROM FacilityORDER BY FacNo DESCLIMIT 1# ----------# 2# ----------# Insert a new row in the Location table related to the Facility row in modification problem 1. The new row should have# “Door” for the location name.INSERT INTO Location (LocNo, FacNo, LocName)SELECT CONCAT('L', (CAST(SUBSTRING_INDEX(LocNo, 'L', -1) AS UNSIGNED) + 1)),       (SELECT Facility.FacNo FROM Facility ORDER BY Facility.FacNo DESC LIMIT 1),       'Door'FROM LocationORDER BY LocNo DESCLIMIT 1;# ----------# 3# ----------# Insert a new row in the Location table related to the Facility row in modification problem 1. The new row should have# “Locker Room” for the location name.INSERT INTO Location (LocNo, FacNo, LocName)SELECT CONCAT('L', (CAST(SUBSTRING_INDEX(LocNo, 'L', -1) AS UNSIGNED) + 1)),       (SELECT Facility.FacNo FROM Facility ORDER BY Facility.FacNo DESC LIMIT 1),       'Locker Room'FROM LocationORDER BY LocNo DESCLIMIT 1;# ----------# 4# ----------# Change the location name of “Door” to “Gate” for the row inserted in modification problem 2. In MySQL, you need to# place the UPDATE statement between two SET statements.# SET SQL_SAFE_UPDATES = 0;# UPDATE statement#        SET SQL_SAFE_UPDATES = 1;SET SQL_SAFE_UPDATES = 0;UPDATE LocationSET LocName = 'Gate'WHERE LocName = 'Door'ORDER BY LocNo DESCLIMIT 1;SET SQL_SAFE_UPDATES = 1;# ----------# 5# ----------# Delete the row inserted in modification problem 3.DELETEFROM LocationWHERE LocName = 'Locker Room'ORDER BY LocNo DESCLIMIT 1;# ==========# SQL Statements with Errors and Poor Formatting# ==========# ----------# 1# ----------# Identify errors in the following SQL statement and label errors with error type (syntax, redundancy, or semantic). To# simplify your work, the statement has only one type of error. Rewrite the statement to remove the error.## SELECT eventrequest.eventno, dateheld, status, estcost# FROM eventrequest, employee, facility, eventplan# WHERE estaudience > 5000#   AND eventplan.empno = employee.empno#   AND eventrequest.facno = facility.facno#   (semantic - missing join constraint)#   AND facname = 'Football stadium'#   AND empname = 'Mary Manager'SELECT eventrequest.eventno, dateheld, status, estcostFROM eventrequest,     employee,     facility,     eventplanWHERE estaudience > 5000  AND eventplan.empno = employee.empno  AND eventrequest.facno = facility.facno  AND EventPlan.EventNo = EventRequest.EventNo  AND facname = 'Football stadium'  AND empname = 'Mary Manager';# ----------# 2# ----------# Identify errors in the following SQL statement and label errors with error type (syntax, redundancy, or semantic). To# simplify your work, the statement has only one type of error. Rewrite the statement to remove the error.## SELECT DISTINCT eventrequest.eventno, dateheld, status, estcost# FROM eventrequest, eventplan (semantic)# WHERE estaudience > 4000#   AND eventplan.eventno = eventrequest.eventno (semantic)# GROUP BY eventrequest.eventno, dateheld, status, estcostSELECT DISTINCT eventrequest.eventno, dateheld, status, estcostFROM eventrequestWHERE estaudience > 4000GROUP BY eventrequest.eventno, dateheld, status, estcost;# ----------# 3# ----------# Identify errors in the following SQL statement and label errors with error type (syntax, redundancy, or semantic). To# simplify your work, the statement has only one type of error. Rewrite the statement to remove the error.## SELECT DISTINCT eventrequest.eventno, dateheld, status, estcost# FROM eventrequest, employee, facility, eventplan# WHERE estaudience > 5000#   AND eventplan.empno = employee.empno (redundency)#   AND eventrequest.facno = facility.facno#   AND eventplan.eventno = eventrequest.eventno (redundency)#   AND facname = 'Football stadium'SELECT DISTINCT eventrequest.eventno, dateheld, status, estcostFROM eventrequest,     facilityWHERE estaudience > 5000  AND eventrequest.facno = facility.facno  AND facname = 'Football stadium';# ----------# 4# ----------# Identify errors in the following SQL statement and label errors with error type (syntax, redundancy, or semantic). To# simplify your work, the statement has only one type of error. Rewrite the statement to remove the errors.## SELECT DISTINCT eventno, dateheld, status, estcost (syntax)# FROM eventrequest, employee, eventplan# WHERE estaudience BETWEN 5000 AND 10000 (syntax)#   AND eventplan.empno = employee.empno#   AND eventrequest.eventno = eventplan.eventno#   AND empname = 'Mary Manager'SELECT DISTINCT EventRequest.eventno, dateheld, status, estcostFROM eventrequest,     employee,     eventplanWHERE estaudience BETWEEN 5000 AND 10000  AND eventplan.empno = employee.empno  AND eventrequest.eventno = eventplan.eventno  AND empname = 'Mary Manager';# ----------# 5# ----------# Identify areas in which the SQL statement has poor coding practices and rewrite the statement to improve the coding# practices. You do not need to search for errors.##       SELECT eventplan.planno, lineno, resname,# numberfld, timestart, timeend#     FROM eventrequest, facility, eventplan,# eventplanline, resourcetbl#      WHERE estaudience = '10000'# AND eventplan.planno =# eventplanline.planno AND eventrequest.facno# = facility.facno#       AND facname =# 'Basketball arena' AND#    eventplanline.resno = resourcetbl.resno#       AND eventrequest.eventno = eventplan.eventno#SELECT eventplan.planno,       lineno,       resname,       numberfld,       timestart,       timeendFROM eventrequest,     facility,     eventplan,     eventplanline,     resourcetblWHERE estaudience = '10000'    AND facname = 'Basketball arena'    AND eventplan.planno = eventplanline.planno    AND eventrequest.facno = facility.facno    AND eventplanline.resno = resourcetbl.resno    AND EventRequest.EventNo = EventPlan.EventNo